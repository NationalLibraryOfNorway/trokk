name: Build Tauri App

on:
  push:
    tags:
      - v*
      - test*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform: [self-hosted, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PAPI_PATH: "placeholder"
      OIDC_BASE_URL: "placeholder"
      OIDC_CLIENT_ID: "placeholder"
      OIDC_CLIENT_SECRET: "placeholder"
      RUST_BACKTRACE: full
      RUST_LOG: debug
    steps:
        # TODO fetch secrets from somewhere

      - uses: actions/checkout@v2

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'self-hosted' || matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
          sudo apt-get install libssl-dev

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Run rustfmt
        working-directory: ./src-tauri
        run: cargo fmt --all -- --check

      - name: Run clippy
        working-directory: ./src-tauri
        run: cargo clippy --all -- -D warnings

      - name: Run audit
        continue-on-error: true
        working-directory: ./src-tauri
        run: cargo audit --all -- -D warnings

        # TODO run backend tests when they exist

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        run: npm ci

      - name: Lint frontend
        run: npm run lint

        # TODO run frontend tests when they exist

      - name: Tauri build
        uses: JonasKruckenberg/tauri-build@v1
        id: tauri_build

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.ARTIFACTORY_URL }}}

      - name: Upload to Artifactory
        run: |
          jf rt u "src-tauri/target/release/bundle/*" "/trokk/"
        # TODO upload somewhere when we have a place to upload to